import asyncio
from modbus.monitor import monitor_runtime_async
import config

async def main():
    # –°–ø–∏—Å–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –¥–∞—Ç—á–∏–∫–æ–≤
    sensors = [
        {
            "name": "–õ–∏–Ω–∏—è 2",
            "params": {
                "host": config.MODBUS_HOST,
                "port": config.MODBUS_PORT,
                "register_address": 4,
                "unit_id": 1,
                "bit_number": 3,
                "register_type": "input"
            }
        },
        {
            "name": "–õ–∏–Ω–∏—è 3",
            "params": {
                "host": config.MODBUS_HOST,
                "port": config.MODBUS_PORT,
                "register_address": 4,
                "unit_id": 1,
                "bit_number": 2,
                "register_type": "input"
            }
        },
        {
            "name": "–õ–∏–Ω–∏—è 4",
            "params": {
                "host": config.MODBUS_HOST,
                "port": config.MODBUS_PORT,
                "register_address": 4,
                "unit_id": 1,
                "bit_number": 1,
                "register_type": "input"
            }
        },
        {
            "name": "–õ–∏–Ω–∏—è 5",
            "params": {
                "host": config.MODBUS_HOST,
                "port": config.MODBUS_PORT,
                "register_address": 4,
                "unit_id": 1,
                "bit_number": 0,
                "register_type": "input"
            }
        }
    ]

    # –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–∞—Ç—á–∏–∫–∞
    tasks = [
        monitor_runtime_async(sensor["params"], interval=60,  sensor_name=sensor["name"])
        for sensor in sensors
    ]

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    await asyncio.gather(*tasks)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ Ctrl+C")
